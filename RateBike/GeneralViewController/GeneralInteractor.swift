//
//  GeneralInteractor.swift
//  RateBike
//
//  Created by Сергей Вихляев on 04.05.2020.
//  Copyright (c) 2020 Сергей Вихляев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GeneralBusinessLogic {
    func setupFirstData()
}

protocol GeneralDataStore {
    var bikes: [Bike] { get set }
}

class GeneralInteractor: NSObject, GeneralDataStore {
    weak var presenter: GeneralPresentationLogic!
    var bikes: [Bike] = [] {
        didSet {
            print(bikes.count)
        }
    }
    
    // MARK: Func-s
}

extension GeneralInteractor: GeneralBusinessLogic {
    func setupFirstData() {
        if !CoreDataWorker.shared.checkPreLoadedData() {
            DefaultDataPlistWorker.shared.saveDataFromFileToCoreData { [weak self] (success, bikes, error) in
                if success {
                    guard let bikes = bikes else { return }
                    presenter?.needToInsertRows(count: bikes.count, dataUpdatesBlock: { [weak self] in
                        self?.bikes = bikes
                    })
                } else {
                    
                }
            }
        }
    }
}

extension GeneralInteractor: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        print(bikes.count)
        return bikes.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: String(describing: BikeTableViewCell.self), for: indexPath) as! BikeTableViewCell
        
        cell.cofigure(withBike: bikes[indexPath.row])
        
        return cell
    }
    
    
}
